# Generated by Django 5.2.4 on 2025-08-04 02:09

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("training_config", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="CloudProvider",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "provider_type",
                    models.CharField(
                        choices=[
                            ("COLAB", "Google Colab"),
                            ("KAGGLE", "Kaggle Notebooks"),
                            ("PAPERSPACE", "Paperspace Gradient"),
                            ("AWS_SAGEMAKER", "AWS SageMaker"),
                            ("AZURE_ML", "Azure ML"),
                            ("GCP_VERTEX", "GCP Vertex AI"),
                            ("CUSTOM_API", "Custom API Endpoint"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "api_endpoint",
                    models.URLField(help_text="API endpoint for cloud provider"),
                ),
                (
                    "api_key",
                    models.CharField(
                        blank=True, help_text="Encrypted API key", max_length=500
                    ),
                ),
                (
                    "webhook_url",
                    models.URLField(
                        blank=True, help_text="Webhook URL for status updates"
                    ),
                ),
                ("region", models.CharField(blank=True, max_length=50)),
                ("instance_type", models.CharField(blank=True, max_length=50)),
                (
                    "max_runtime_hours",
                    models.IntegerField(
                        default=12, help_text="Maximum runtime in hours"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("supports_live_monitoring", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="CloudTrainingJob",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "external_job_id",
                    models.CharField(
                        help_text="Job ID from cloud provider", max_length=200
                    ),
                ),
                (
                    "job_url",
                    models.URLField(
                        blank=True, help_text="Direct link to cloud training job"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("STARTING", "Starting"),
                            ("RUNNING", "Running"),
                            ("COMPLETED", "Completed"),
                            ("FAILED", "Failed"),
                            ("CANCELLED", "Cancelled"),
                            ("TIMEOUT", "Timeout"),
                        ],
                        default="PENDING",
                        max_length=20,
                    ),
                ),
                ("progress_percentage", models.FloatField(default=0.0)),
                ("current_epoch", models.IntegerField(default=0)),
                ("total_epochs", models.IntegerField(default=0)),
                ("submitted_at", models.DateTimeField(auto_now_add=True)),
                ("started_at", models.DateTimeField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("last_heartbeat", models.DateTimeField(blank=True, null=True)),
                ("allocated_gpu_type", models.CharField(blank=True, max_length=50)),
                (
                    "actual_cost_usd",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=10, null=True
                    ),
                ),
                ("error_message", models.TextField(blank=True)),
                ("retry_count", models.IntegerField(default=0)),
                (
                    "final_model_url",
                    models.URLField(
                        blank=True, help_text="URL to download trained model"
                    ),
                ),
                (
                    "artifacts_url",
                    models.URLField(blank=True, help_text="URL to training artifacts"),
                ),
                (
                    "cloud_provider",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="training_config.cloudprovider",
                    ),
                ),
                (
                    "configuration",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="training_config.trainingconfiguration",
                    ),
                ),
            ],
            options={
                "ordering": ["-submitted_at"],
            },
        ),
        migrations.CreateModel(
            name="TrainingNotebook",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "notebook_type",
                    models.CharField(
                        choices=[
                            ("COLAB", "Google Colab Notebook"),
                            ("KAGGLE", "Kaggle Notebook"),
                            ("JUPYTER", "Jupyter Notebook"),
                            ("PAPERSPACE", "Paperspace Notebook"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "notebook_content",
                    models.JSONField(help_text="Complete notebook JSON structure"),
                ),
                ("requirements_txt", models.TextField(help_text="Python requirements")),
                (
                    "notebook_url",
                    models.URLField(blank=True, help_text="Public URL to notebook"),
                ),
                ("sharing_enabled", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("is_template", models.BooleanField(default=False)),
                (
                    "configuration",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="training_config.trainingconfiguration",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="LiveTrainingMetrics",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("epoch", models.IntegerField()),
                ("step", models.IntegerField()),
                ("train_loss", models.FloatField()),
                ("validation_loss", models.FloatField(blank=True, null=True)),
                ("learning_rate", models.FloatField(blank=True, null=True)),
                ("train_accuracy", models.FloatField(blank=True, null=True)),
                ("validation_accuracy", models.FloatField(blank=True, null=True)),
                ("gpu_utilization", models.FloatField(blank=True, null=True)),
                ("memory_usage_gb", models.FloatField(blank=True, null=True)),
                ("temperature", models.FloatField(blank=True, null=True)),
                (
                    "custom_metrics",
                    models.JSONField(
                        default=dict, help_text="Additional custom metrics"
                    ),
                ),
                (
                    "cloud_job",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="metrics",
                        to="training_config.cloudtrainingjob",
                    ),
                ),
            ],
            options={
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["cloud_job", "-timestamp"],
                        name="training_co_cloud_j_293cfa_idx",
                    ),
                    models.Index(
                        fields=["cloud_job", "epoch"],
                        name="training_co_cloud_j_d21f47_idx",
                    ),
                ],
            },
        ),
    ]
