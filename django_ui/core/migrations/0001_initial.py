# Generated by Django 4.2.23 on 2025-08-03 18:23

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Paper",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(max_length=500)),
                ("abstract", models.TextField()),
                ("authors", models.TextField()),
                (
                    "doi",
                    models.CharField(
                        blank=True, max_length=100, null=True, unique=True
                    ),
                ),
                ("arxiv_id", models.CharField(blank=True, max_length=50, null=True)),
                ("pubmed_id", models.CharField(blank=True, max_length=50, null=True)),
                ("publication_date", models.DateField(blank=True, null=True)),
                ("journal", models.CharField(blank=True, max_length=200)),
                ("volume", models.CharField(blank=True, max_length=20)),
                ("issue", models.CharField(blank=True, max_length=20)),
                ("pages", models.CharField(blank=True, max_length=50)),
                ("pdf_url", models.URLField(blank=True)),
                ("external_url", models.URLField(blank=True)),
                ("keywords", models.TextField(blank=True)),
                ("subject_categories", models.TextField(blank=True)),
                ("citation_count", models.IntegerField(default=0)),
                ("language", models.CharField(default="en", max_length=10)),
                ("is_open_access", models.BooleanField(default=False)),
                ("content", models.TextField(blank=True)),
                ("embeddings", models.TextField(blank=True)),
                ("summary", models.TextField(blank=True)),
                ("source", models.CharField(default="manual", max_length=50)),
                ("quality_score", models.FloatField(blank=True, null=True)),
                ("relevance_score", models.FloatField(blank=True, null=True)),
            ],
            options={
                "ordering": ["-publication_date", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="WritingAssistance",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(max_length=200)),
                (
                    "task_type",
                    models.CharField(
                        choices=[
                            ("literature_review", "Literature Review"),
                            ("abstract", "Abstract"),
                            ("introduction", "Introduction"),
                            ("methodology", "Methodology"),
                            ("results", "Results"),
                            ("discussion", "Discussion"),
                            ("conclusion", "Conclusion"),
                            ("citation", "Citation Formatting"),
                        ],
                        max_length=50,
                    ),
                ),
                ("content", models.TextField()),
                ("improved_content", models.TextField(blank=True)),
                ("suggestions", models.TextField(blank=True)),
                ("style_improvements", models.TextField(blank=True)),
                ("citation_corrections", models.TextField(blank=True)),
                ("readability_score", models.FloatField(blank=True, null=True)),
                ("word_count", models.IntegerField(default=0)),
                (
                    "tone",
                    models.CharField(
                        choices=[
                            ("academic", "Academic"),
                            ("formal", "Formal"),
                            ("technical", "Technical"),
                            ("accessible", "Accessible"),
                        ],
                        default="academic",
                        max_length=20,
                    ),
                ),
                (
                    "target_audience",
                    models.CharField(default="researchers", max_length=50),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="VideoAnalysis",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(max_length=200)),
                ("video_url", models.URLField()),
                ("duration_seconds", models.IntegerField(blank=True, null=True)),
                (
                    "video_type",
                    models.CharField(
                        choices=[
                            ("lecture", "Academic Lecture"),
                            ("conference", "Conference Presentation"),
                            ("seminar", "Research Seminar"),
                            ("interview", "Research Interview"),
                            ("tutorial", "Educational Tutorial"),
                        ],
                        default="lecture",
                        max_length=50,
                    ),
                ),
                ("language", models.CharField(default="en", max_length=10)),
                ("transcript", models.TextField(blank=True)),
                ("summary", models.TextField(blank=True)),
                ("key_concepts", models.TextField(blank=True)),
                ("timeline", models.TextField(blank=True)),
                ("topics", models.TextField(blank=True)),
                ("sentiment_analysis", models.TextField(blank=True)),
                (
                    "processing_status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("processing", "Processing"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("error_message", models.TextField(blank=True)),
                ("processing_time", models.FloatField(blank=True, null=True)),
                (
                    "creator",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="UserPreferences",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "default_search_sources",
                    models.TextField(default='["arxiv", "semantic_scholar"]'),
                ),
                ("max_search_results", models.IntegerField(default=20)),
                ("preferred_languages", models.TextField(default='["en"]')),
                ("email_notifications", models.BooleanField(default=True)),
                ("web_notifications", models.BooleanField(default=True)),
                (
                    "notification_frequency",
                    models.CharField(default="weekly", max_length=20),
                ),
                (
                    "preferred_podcast_style",
                    models.CharField(default="summary", max_length=50),
                ),
                ("preferred_voice", models.CharField(default="alloy", max_length=50)),
                ("auto_generate_summaries", models.BooleanField(default=True)),
                (
                    "theme",
                    models.CharField(
                        choices=[
                            ("light", "Light"),
                            ("dark", "Dark"),
                            ("auto", "Auto"),
                        ],
                        default="light",
                        max_length=20,
                    ),
                ),
                ("items_per_page", models.IntegerField(default=25)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SearchHistory",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("query", models.CharField(max_length=500)),
                ("search_type", models.CharField(default="unified", max_length=50)),
                ("sources", models.TextField(blank=True)),
                ("filters", models.TextField(blank=True)),
                ("results_count", models.IntegerField(default=0)),
                ("execution_time", models.FloatField(blank=True, null=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ResearchProject",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("planning", "Planning"),
                            ("active", "Active"),
                            ("review", "Under Review"),
                            ("completed", "Completed"),
                            ("on_hold", "On Hold"),
                        ],
                        default="planning",
                        max_length=20,
                    ),
                ),
                ("start_date", models.DateField(blank=True, null=True)),
                ("end_date", models.DateField(blank=True, null=True)),
                ("tags", models.TextField(blank=True)),
                ("notes", models.TextField(blank=True)),
                (
                    "privacy",
                    models.CharField(
                        choices=[
                            ("private", "Private"),
                            ("collaborators", "Collaborators Only"),
                            ("public", "Public"),
                        ],
                        default="private",
                        max_length=20,
                    ),
                ),
                (
                    "collaborators",
                    models.ManyToManyField(
                        blank=True,
                        related_name="collaborated_projects",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="owned_projects",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("papers", models.ManyToManyField(blank=True, to="core.paper")),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Researcher",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("orcid_id", models.CharField(blank=True, max_length=19, null=True)),
                ("affiliation", models.CharField(blank=True, max_length=200)),
                ("research_interests", models.TextField(blank=True)),
                ("h_index", models.IntegerField(blank=True, null=True)),
                ("citation_count", models.IntegerField(default=0)),
                ("bio", models.TextField(blank=True)),
                ("website", models.URLField(blank=True)),
                (
                    "profile_image",
                    models.ImageField(blank=True, null=True, upload_to="profiles/"),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ResearchAlert",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(max_length=200)),
                (
                    "alert_type",
                    models.CharField(
                        choices=[
                            ("keyword", "Keyword Alert"),
                            ("author", "Author Alert"),
                            ("journal", "Journal Alert"),
                            ("citation", "Citation Alert"),
                            ("conference", "Conference Alert"),
                        ],
                        max_length=50,
                    ),
                ),
                ("keywords", models.TextField(blank=True)),
                ("authors", models.TextField(blank=True)),
                ("journals", models.TextField(blank=True)),
                (
                    "frequency",
                    models.CharField(
                        choices=[
                            ("daily", "Daily"),
                            ("weekly", "Weekly"),
                            ("monthly", "Monthly"),
                            ("immediate", "Immediate"),
                        ],
                        default="weekly",
                        max_length=20,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("last_triggered", models.DateTimeField(blank=True, null=True)),
                ("trigger_count", models.IntegerField(default=0)),
                ("email_notifications", models.BooleanField(default=True)),
                ("web_notifications", models.BooleanField(default=True)),
                ("max_results", models.IntegerField(default=10)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="PodcastEpisode",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField()),
                (
                    "style",
                    models.CharField(
                        choices=[
                            ("summary", "Summary Style"),
                            ("interview", "Interview Style"),
                            ("debate", "Debate Style"),
                            ("educational", "Educational Style"),
                        ],
                        default="summary",
                        max_length=50,
                    ),
                ),
                ("duration_seconds", models.IntegerField()),
                (
                    "audio_file",
                    models.FileField(blank=True, null=True, upload_to="podcasts/"),
                ),
                ("transcript", models.TextField(blank=True)),
                ("script", models.TextField(blank=True)),
                ("voice_model", models.CharField(default="alloy", max_length=50)),
                ("language", models.CharField(default="en", max_length=10)),
                ("generation_time", models.FloatField(blank=True, null=True)),
                ("file_size", models.BigIntegerField(blank=True, null=True)),
                ("play_count", models.IntegerField(default=0)),
                ("like_count", models.IntegerField(default=0)),
                ("share_count", models.IntegerField(default=0)),
                (
                    "creator",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "paper",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="podcasts",
                        to="core.paper",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="IntegrityCheck",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(max_length=200)),
                ("content", models.TextField()),
                ("plagiarism_score", models.FloatField(blank=True, null=True)),
                ("similarity_matches", models.TextField(blank=True)),
                ("citation_issues", models.TextField(blank=True)),
                ("style_violations", models.TextField(blank=True)),
                (
                    "check_type",
                    models.CharField(
                        choices=[
                            ("plagiarism", "Plagiarism Check"),
                            ("citation", "Citation Verification"),
                            ("style", "Style Check"),
                            ("comprehensive", "Comprehensive Check"),
                        ],
                        default="comprehensive",
                        max_length=50,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("processing", "Processing"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("overall_score", models.FloatField(blank=True, null=True)),
                ("recommendation", models.TextField(blank=True)),
                ("issues_found", models.IntegerField(default=0)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="CollaborationRequest",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField()),
                (
                    "collaboration_type",
                    models.CharField(
                        choices=[
                            ("research", "Research Project"),
                            ("review", "Paper Review"),
                            ("coauthoring", "Co-authoring"),
                            ("mentoring", "Mentoring"),
                            ("data_sharing", "Data Sharing"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("accepted", "Accepted"),
                            ("declined", "Declined"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("deadline", models.DateField(blank=True, null=True)),
                ("response_message", models.TextField(blank=True)),
                ("responded_at", models.DateTimeField(blank=True, null=True)),
                ("shared_data", models.TextField(blank=True)),
                ("papers", models.ManyToManyField(blank=True, to="core.paper")),
                (
                    "recipient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="received_requests",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "requester",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sent_requests",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="PaperRating",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "rating",
                    models.IntegerField(
                        choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)]
                    ),
                ),
                ("review", models.TextField(blank=True)),
                (
                    "paper",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.paper"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("user", "paper")},
            },
        ),
        migrations.CreateModel(
            name="PaperBookmark",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("notes", models.TextField(blank=True)),
                ("tags", models.TextField(blank=True)),
                (
                    "paper",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.paper"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("user", "paper")},
            },
        ),
    ]
