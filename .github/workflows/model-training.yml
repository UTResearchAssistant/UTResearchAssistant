name: AI Model Training Pipeline

on:
  schedule:
    # Run weekly on Sundays at 2 AM UTC
    - cron: "0 2 * * 0"
  workflow_dispatch:
    inputs:
      model_type:
        description: "Type of model to train"
        required: true
        default: "embedding"
        type: choice
        options:
          - embedding
          - classification
          - summarization
      dataset_path:
        description: "Path to training dataset"
        required: false
        default: "datasets/training_data"

jobs:
  prepare-training-data:
    name: Prepare Training Data
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pandas scikit-learn transformers torch

      - name: Download and prepare training data
        run: |
          python services/training_service/prepare_data.py \
            --model-type ${{ github.event.inputs.model_type || 'embedding' }} \
            --dataset-path ${{ github.event.inputs.dataset_path || 'datasets/training_data' }}

      - name: Upload prepared data
        uses: actions/upload-artifact@v4
        with:
          name: training-data
          path: datasets/training_data/

  train-model:
    name: Train AI Model
    runs-on: ubuntu-latest
    needs: prepare-training-data

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install CUDA (if available)
        run: |
          if command -v nvidia-smi &> /dev/null; then
            echo "CUDA available"
            pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu118
          else
            echo "CPU only"
            pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu
          fi

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install wandb tensorboard

      - name: Download prepared data
        uses: actions/download-artifact@v4
        with:
          name: training-data
          path: datasets/training_data/

      - name: Train model
        run: |
          python services/training_service/train_model.py \
            --model-type ${{ github.event.inputs.model_type || 'embedding' }} \
            --config services/training_service/configs/${{ github.event.inputs.model_type || 'embedding' }}.yaml \
            --output-dir models/trained/
        env:
          WANDB_API_KEY: ${{ secrets.WANDB_API_KEY }}

      - name: Evaluate model
        run: |
          python services/training_service/evaluate_model.py \
            --model-path models/trained/ \
            --test-data datasets/training_data/test/

      - name: Upload trained model
        uses: actions/upload-artifact@v4
        with:
          name: trained-model
          path: models/trained/

  deploy-model:
    name: Deploy Trained Model
    runs-on: ubuntu-latest
    needs: train-model
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download trained model
        uses: actions/download-artifact@v4
        with:
          name: trained-model
          path: models/trained/

      - name: Deploy to model registry
        run: |
          echo "Deploying model to production registry..."
          # Add model deployment logic here
